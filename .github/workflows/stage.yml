---
name: Stage

on:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  stage:
    runs-on: ubuntu-latest
    environment: staging
    name: Stage skill handler
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Setup Java 11
        uses: actions/setup-java@v3.8.0
        with:
          distribution: adopt
          java-version: 11
          cache: maven

      - name: Configure aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build skill handler
        working-directory: ./lambda
        run: mvn verify -Pits,cov,zip -B -ff

      - name: Upload integration test logs
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: it-logs
          path: lambda/target/it/shabbat-times-interaction-it/build.log
          if-no-files-found: warn

      # https://aws.amazon.com/blogs/compute/tracking-the-state-of-lambda-functions/
      - name: Get function state
        id: function_state
        run: |
          state=$(aws lambda get-function --function-name ${{ secrets.LAMBDA_FUNCTION }} --query 'Configuration.State' --output text)
          echo '::set-output name=state::'"$state"

      - name: Verify function is in active state
        if: steps.function_state.outputs.state != 'Active'
        uses: actions/github-script@v6
        with:
          script: |
            core.warning('the function is being updated, please try again later')
            core.notice('the function is being updated, please try again later')

      - name: Deploy skill handler to lambda (no publish)
        if: steps.function_state.outputs.state == 'Active'
        run: >
          aws lambda update-function-code
          --function-name ${{ secrets.LAMBDA_FUNCTION }}
          --zip-file fileb://./lambda/target/skill-handler-function.zip

      - name: Push coverage report
        uses: codecov/codecov-action@v3
        with:
          files: lambda/target/site/jacoco/jacoco.xml
          fail_ci_if_error: true
